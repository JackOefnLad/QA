{
	"info": {
		"_postman_id": "faca7804-c7d7-45f4-9aad-b8737a23376d",
		"name": "Общая коллекция",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28187426"
	},
	"item": [
		{
			"name": "SOAP",
			"item": [
				{
					"name": "Countries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"m:sCapitalCit\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text"
							},
							{
								"key": "SOAPActon",
								"value": "#POST",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n    <Body>\r\n        <FullCountryInfo xmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\r\n            <sCountryISOCode>BR</sCountryISOCode>\r\n        </FullCountryInfo>\r\n    </Body>\r\n</Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
							"protocol": "http",
							"host": [
								"webservices",
								"oorsprong",
								"org"
							],
							"path": [
								"websamples.countryinfo",
								"CountryInfoService.wso"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "StringInvertin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invertion\", ()=>{\r",
									"    var Obj = xml2Json(responseBody);\r",
									"    //xml2Json package превращает XML в объект JS\r",
									"    var numToWord = Obj[\"soap:Envelope\"][\"soap:Body\"][\"m:InvertStringCaseResponse\"][\"m:InvertStringCaseResult\"];\r",
									"    //Из полученного объекта(Obj) мы проходим по иерархии до проверяемого элемента \r",
									"    //Возвращает булево значение(True/False)\r",
									"    return numToWord == \"REAPER\";\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text"
							},
							{
								"key": "SOAPAction",
								"value": "#POST",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<soap12:Envelope xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\r\n  <soap12:Body>\r\n    <InvertStringCase xmlns=\"http://www.dataaccess.com/webservicesserver/\">\r\n      <sAString>repaper</sAString>\r\n    </InvertStringCase>\r\n  </soap12:Body>\r\n</soap12:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "https://www.dataaccess.com/webservicesserver/TextCasing.wso",
							"protocol": "https",
							"host": [
								"www",
								"dataaccess",
								"com"
							],
							"path": [
								"webservicesserver",
								"TextCasing.wso"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "REST",
			"item": [
				{
					"name": "GraphQLonBody",
					"item": [
						{
							"name": "GraphQL",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query Hello($name: String!){\r\n  hello(person: {name: $name })\r\n}",
										"variables": "{\r\n    \"name\": {{name}}\r\n}"
									}
								},
								"url": {
									"raw": "https://graphql.postman-echo.com/graphql",
									"protocol": "https",
									"host": [
										"graphql",
										"postman-echo",
										"com"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CreateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"prereq@mail.ru\",\r\n    \"name\": \"Req\",\r\n    \"password\": \"123qwe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Usersurl}}/tasks/rest/doregister",
							"host": [
								"{{Usersurl}}"
							],
							"path": [
								"tasks",
								"rest",
								"doregister"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteUser",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"test@mail.ru\",\r\n    \"name\":\"ts\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://users.bugred.ru/tasks/rest/deleteuser",
							"protocol": "http",
							"host": [
								"users",
								"bugred",
								"ru"
							],
							"path": [
								"tasks",
								"rest",
								"deleteuser"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteUserVIASOAP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text"
							},
							{
								"key": "SOAPAction",
								"value": "#POST",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n    <Body>\r\n        <DeleteUser xmlns=\"http://foo.bar/wrappersoapserver\">\r\n            <email>prereq@mail.ru</email>\r\n        </DeleteUser>\r\n    </Body>\r\n</Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://users.bugred.ru/tasks/soap/WrapperSoapServer.php",
							"protocol": "http",
							"host": [
								"users",
								"bugred",
								"ru"
							],
							"path": [
								"tasks",
								"soap",
								"WrapperSoapServer.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "DoREG&Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"name\", jsonData.name);\r",
									"    pm.environment.set(\"email\", jsonData.email);\r",
									"    pm.environment.set(\"password\", jsonData.password);\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"test@mail.ru\");\r",
									"});\r",
									"\r",
									"pm.test(\"Header is present\", function () {\r",
									"    pm.response.to.have.header(\"Agent\");\r",
									"});\r",
									"\r",
									"pm.test(\"Header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/xml\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url: \"http://users.bugred.ru/tasks/rest/deleteuser\",\r",
									"    method: 'Delete',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"        \"email\": \"test@mail.ru\",\r",
									"        \"name\": \"ts\"\r",
									"    })\r",
									"},\r",
									"function (err, res){});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@mail.ru\",\r\n    \"name\": \"ts\",\r\n    \"password\": \"123qwe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Usersurl}}/tasks/rest/doregister",
							"host": [
								"{{Usersurl}}"
							],
							"path": [
								"tasks",
								"rest",
								"doregister"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "name",
			"value": "Dalke",
			"type": "string",
			"disabled": true
		}
	]
}